kind: ZarfPackageConfig
metadata:
  name: maas
  description: "Zarf package with a Canonical MaaS deployment"
  architecture: amd64
  version: 0.0.5

components:
  - name: maas-images
    manifests:
      - name: maas-images-deployment
        files:
          - manifests/deployment.yaml
    images:
      - ghcr.io/defenseunicorns/zarf-package-bare-metal/maas-images:0.1

  - name: maas-snap
    required: true
    actions:
      onCreate:
        before:
          - cmd: ./zarf package pull oci://ghcr.io/defenseunicorns/packages/maas-snap:0.0.4-amd64 --no-progress 
      onDeploy:
        after:
          - cmd: ./zarf package deploy zarf-package-maas-snap-amd64-0.0.4.tar.zst --no-progress --confirm
    files:
      - source: zarf-package-maas-snap-amd64-0.0.4.tar.zst
        target: zarf-package-maas-snap-amd64-0.0.4.tar.zst

  - name: maas-packer
    required: true
    actions:
      onCreate:
        before:
          - cmd: ./zarf package pull oci://ghcr.io/defenseunicorns/packages/maas-packer:0.0.2-amd64 --no-progress
      onDeploy:
        after:
          - cmd: ./zarf package deploy zarf-package-maas-packer-amd64-0.0.2.tar.zst --no-progress --confirm
    files:
      - source: zarf-package-maas-packer-amd64-0.0.2.tar.zst
        target: zarf-package-maas-packer-amd64-0.0.2.tar.zst

  - name: maas-cfg
    required: true
    files:
      - source: https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
        target: jq
        executable: true
    actions:
      onDeploy:
        after:
         - cmd: |
            maas init region+rack --database-uri maas-test-db:/// --maas-url http://0.0.0.0:5240/MAAS
            maas createadmin --username admin --password admin --email 'x@x.com'
            maas apikey --username=admin > api-key-file
            maas login admin http://127.0.0.1:5240/MAAS/api/2.0/ $(head -1 api-key-file)

            BOOT_SOURCE_ID=$(maas admin boot-sources read | ./jq '.[] | select(.url | contains("images.maas.io/ephemeral-v3")) | .id')
            maas admin boot-source update $BOOT_SOURCE_ID url=http://localhost:8080/maas/images/ephemeral-v3/stable/

            mkdir -p /home/$USER
            cp custom-cloudimg.tar.gz /home/$USER/custom-cloudimg.tar.gz
            
            while maas admin boot-resources create name=custom/ubuntu-zarf title="Ubuntu 22.04 w/Zarf" architecture="amd64/generic" content@=/home/$USER/custom-cloudimg.tar.gz; [ $? -ne 0 ]; do
              echo "MaaS not yet ready for image upload... Sleeping for 10 seconds."
              sleep 10
            done
